
import Aries from 'creeperhost-aries';

export default function ServerInfoAPI( options ) {
	options = Object.assign( {}, ServerInfoAPI.defaultOptions, options );

	Object.assign( this, {
		credentials: options.credentials
	});

	// setup api.

	let api = new Aries( this.credentials.key, this.credentials.secret );

	this.getApi = () => api;
}

Object.assign( ServerInfoAPI.prototype, {
	credentials: null,
	getApi: null,

	execApiCommand( section, command, data, next ) {
		this.getApi().exec( section, command, data, ( res, resStream, rawResponse ) => {
			if( resStream.statusCode !== 200 ) {
				let error = new Error( `Server returned non-OK status ${ resStream.statusCode }` );

				Object.assign( error, {
					command: [ section, command ],
					commandData: data,
					apiErrorType: 'bad-response',
					statusCode: resStream.statusCode,
					rawResponse: rawResponse
				});

				return next( error );
			}

			if( res.status !== 'success' ) {
				let error = new Error( `API Call returned non-successfully: ${ res.message }` );

				Object.assign( error, {
					command: [ section, command ],
					commandData: data,
					apiErrorType: 'unsuccessful',
					status: res.status,
					message: res.message,
					rawResponse: rawResponse
				});

				return next( error );
			}

			return next( null, res );
		});
	},

	consoleRead( next ) {
		this.execApiCommand( 'minecraft', 'readconsole', {}, next );
	},

	consoleWrite( command, next ) {
		this.execApiCommand( 'minecraft', 'writeconsole', { command }, next );
	},

	serverStart( next ) {
		this.execApiCommand( 'minecraft', 'startserver', {}, next );
	},

	serverStop( next ) {
		this.execApiCommand( 'minecraft', 'stopserver', {}, next );
	},

	serverRestart( next ) {
		this.execApiCommand( 'minecraft', 'restartserver', {}, next );
	},

	osGetRAM( next ) {
		this.execApiCommand( 'os', 'getram', {}, next );
	},

	osGetCPU( next ) {
		this.execApiCommand( 'os', 'getcpu', {}, next );
	},

	osGetHDD( next ) {
		this.execApiCommand( 'os', 'gethdd', {}, next );
	},

	playersList( next ) {
		this.execApiCommand( 'minecraft', 'players', {}, next );
	}
});
